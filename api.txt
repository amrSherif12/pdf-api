import 'dart:io';
import 'dart:typed_data';

import 'package:al_salam/constants/string.dart';
import 'package:dio/dio.dart';
import 'package:fluent_ui/fluent_ui.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:http/http.dart' as http;
import 'package:path_provider/path_provider.dart';

import '../../logic/receipts_moves_cubit.dart';
import '../models/moves_model.dart';

class ReceiptsApi {
  static Dio dio = Dio();

  static Future<Map<String, String>> convertToPdf(
      BuildContext context, List<MoveModel> moves, DateTimeRange date) async {
    String html =
        await BlocProvider.of<ReceiptsMovesCubit>(context)
            .assembleHtmlReceipt(moves, date);
    try {
      final options = {
        "margin_bottom": "0.5cm",
        "margin_top": "0.5cm",
        "margin_left": "0.5cm",
        "margin_right": "0.5cm",
        "html": html,
        "css": "html *\n{\n  color: #000 !important;\n  font-family: 'Cairo', sans-serif;\n}",
      };

      const headers = {
        "Authorization": "Bearer pdfe_live_fbd20c8a7ff196522ba5452ad07f760dae15"
      };
      Uri url = Uri.parse(ConstStrings.apiLink);

      http.Response response =
          await http.post(url, body: options, headers: headers);

      List<String> list = response.body.split(",");

      return {
        "url": list[5].substring(7, list[5].length - 1),
        "name": html,
      };
    } catch (e) {
      return {};
    }
  }

  static Future<Uint8List> getPdf(String url, String name) async {
    String path =
        '${(await getApplicationDocumentsDirectory()).path}\\Al Salam\\$name.pdf';
    await dio.download(url, path);
    return File(path).readAsBytesSync();
  }
}
