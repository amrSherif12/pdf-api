  void makeReceipt(List<MoveModel> moves, BuildContext context,
      List<ReceiptModel> currentReceipts) async {
    Directory directory = await getApplicationDocumentsDirectory();
    Map<String, dynamic> data;
    if(receiptName.text.isNotEmpty){
      try {
        showToast("يتم انشاء الفتورة", context);
        data = await convertHtmlToPdf(moves, context, date);
        await showDialog(
            context: context,
            builder: (context) => ShowReceipt(
                bytes: data["bytes"],
                title: receiptName.text,
                directory: directory));
        BlocProvider.of<ReceiptsCubit>(context)
            .getReceipts(false, currentReceipts);
      } catch (e) {
        showToast("هناك عطل اعد المحاولة", context);
      }
    } else {
      showToast("ادخل اسم الفتورة", context);
    }
  }

  void showToast(String msg, BuildContext context) {
    return ToastView.createView(msg, context, 2, 0, ConstColors.secLight,
        const TextStyle(color: Colors.white, fontFamily: 'f'), 10, null, null);
  }

  Future<Map<String, dynamic>> convertHtmlToPdf(
      List<MoveModel> moves, BuildContext context, DateTimeRange date) async {
    Map<String, String> url =
        await ReceiptsApi.convertToPdf(context, moves, date);
    Uint8List bytes =
        await ReceiptsApi.getPdf(url["url"] ?? "", receiptName.text);
    return {"bytes": bytes, "name": url["name"]};
  }

  Future<String> assembleHtmlReceipt(
      List<MoveModel> moves, DateTimeRange date) async {
    List<TableItem> tableItems = await getTableItems(moves);
    int price = 0;
    int tax = 0;
    String html = "<html dir=\"rtl\" lang=\"ar\">\n<div>\n<div id=\"invoice-POS\"><center id=\"top\" style=\"border-bottom: 1px solid #EEE; min-height: 100px;\">\n<div class=\"info\" style=\"display: block; //float: left; margin-left: 0;\">\n<h2 style=\"font-size: 3em;\"><span style=\"color: #000000;\">&nbsp;Al Salam Transportation</span></h2>\n <h2 style=\"font-size: 1.7em;\"><span style=\"color: #000000;\">&nbsp; فتورة رقم ${receiptName.text}\n</span></h2>\n</div>\n<span style=\"color: #000000;\"><!--End Info--></span></center><span style=\"color: #000000;\"><!--End InvoiceTop--></span>\n<div id=\"mid\" style=\"border-bottom: 1px solid #EEE; min-height: 80px;\">&nbsp;\n<table style=\"width: 100%; border-collapse: collapse;\">\n<tbody>\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Cairo&display=swap\" rel=\"stylesheet\">\n<tr class=\"tabletitle\" style=\"font-size: 0.5em; background: #eeeeee; height: 61.6146px;\">\n<td class=\"Rate\" style=\"text-align: center; height: 61.6146px; width: 10%;\">\n<h2 style=\"font-size: 3em;\">الاجمالي</h2>\n</td>\n<td class=\"Rate\" style=\"width: 10%; text-align: center; height: 61.6146px;\">\n<h2 style=\"font-size: 3em;\">سعر الوحدة</h2>\n</td>\n<td class=\"Rate\" style=\"width: 10%; text-align: center; height: 61.6146px;\">\n<h2 style=\"font-size: 3em;\">العدد</h2>\n</td>\n<td class=\"Rate\" style=\"width: 50%; text-align: center; height: 61.6146px;\">\n<h2 style=\"font-size: 3em;\">البيان</h2>\n</td>\n</tr>\n\n\n\n\n";
    String tableItemsCode = "";
    for (int i = 0; i < tableItems.length; i++) {
      tableItemsCode =
          "$tableItemsCode\n<tr class=\"service\" style=\"border-bottom: 1px solid #eeeeee; height: 125px;\">\n<td class=\"tableitem\" style=\"width: 10%; text-align: center; height: 125px;\">\n<p class=\"itemtext\" style=\"font-size: 1.5em; color: #666; line-height: 1.2em;\">${tableItems[i].totalPrice}</p>\n</td>\n<td class=\"tableitem\" style=\"width: 10%; text-align: center; height: 125px;\">\n<p class=\"itemtext\" style=\"font-size: 1.5em; color: #666; line-height: 1.2em;\">${tableItems[i].contPrice}</p>\n</td>\n<td class=\"tableitem\" style=\"width: 10%; text-align: center; height: 125px;\">\n<p class=\"itemtext\" style=\"font-size: 1.5em; color: #666; line-height: 1.2em;\">${tableItems[i].amount}</p>\n</td>\n<td class=\"tableitem\" style=\"width: 50%; text-align: center; height: 125px;\">\n<p class=\"itemtext\" style=\"font-size: 1.5em; color: #666; line-height: 1.2em;\">${tableItems[i].statement}</p>\n</td>\n</tr>\n\n  \n\n\n  \n";
      price += tableItems[i].totalPrice;
    }
    tax = (price * 0.14).toInt();
    price += tax;
    html =
        "$html$tableItemsCode<tr class=\"tabletitle\" style=\"font-size: 0.5em; background: #eeeeee; height: 81px;\">\n   <td class=\"Rate\" style=\"width: 10%; text-align: center; height: 81px;\">\n<p style=\"font-size: 3em;\"><span style=\"color: #000000;\">14% ضريبة</span></p>\n</td>\n<td style=\"width: 10%; text-align: center; height: 81px;\">\n<p><span style=\"color: #000000;\"><span style=\"font-size: 3em; color: #000000;\">&nbsp;$tax</span></span></p>\n</td>\n<td class=\"payment\" style=\"width: 10%; text-align: center; height: 81px;\">\n<p style=\"font-size: em;\">&nbsp;</p>\n</td>\n<td class=\"payment\" style=\"width: 50%; text-align: center; height: 81px;\">&nbsp;</td>\n</tr>\n<tr class=\"tabletitle\" style=\"font-size: 0.5em; background: #eeeeee; height: 75px;\">\n  <td class=\"Rate\" style=\"width: 10%; text-align: center; height: 75px;\">\n<p style=\"font-size: 3em;\">المجموع</p>\n</td>\n<td style=\"width: 10%; text-align: center; height: 75px;\">\n<p><span style=\"color: #000000;\"><span style=\"font-size: 3em; color: #000000;\">&nbsp;$price</span></span></p>\n</td>\n<td class=\"payment\" style=\"width: 10%; text-align: center; height: 75px;\">\n<p style=\"font-size: .9em;\">&nbsp;</p>\n</td>\n<td class=\"payment\" style=\"width: 50%; text-align: center; height: 75px;\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</div>\n<!--End InvoiceBot--></div>\n</div>\n<!--End Invoice-->";

    return html;
  }

  Future<List<TableItem>> getTableItems(List<MoveModel> moves) async {
    List<TableItem> list = [];
    for (int i = 0; i < moves.length; i++) {
      list.add(TableItem(
        totalPrice: moves[i].totalPrice,
        contPrice: moves[i].contPrice,
        amount: moves[i].numberOfCont,
        statement: makeStatement(moves[i].contType, moves[i].from, moves[i].to,
            moves[i].releaseNumber, moves[i].client),
      ));
      if (moves[i].byata > 0) {
        list.add(TableItem(
          totalPrice: moves[i].byata * moves[i].numberOfCont,
          contPrice: moves[i].byata,
          amount: moves[i].numberOfCont,
          statement: makeByataStatement(moves[i].contType,
              moves[i].releaseNumber, moves[i].client, moves[i].byataDate),
        ));
      }
    }
    return list;
  }

  String makeByataStatement(
      String contType, List releaseNumbers, String client, DateTime date) {
    String statement = "بياتات $contType $client شهادات: (";

    for (int i = 0; i < releaseNumbers.length; i++) {
      statement = "$statement${releaseNumbers[i]}";
      if (i != releaseNumbers.length - 1) {
        if (i % 5 == 0) {
          statement = "$statement/\n";
        } else {
          statement = "$statement/";
        }
      }
    }

    statement += ") ";
    statement +=
        "بياتة يوم ${date.year}-${addZeroToDate(date.month.toString())}-${addZeroToDate(date.day.toString())}";
    return statement;
  }

  String makeStatement(String contType, String from, String to,
      List releaseNumbers, String client) {
    String statement = "حاويات $contType $client من $from الي $to شهادات: (";

    for (int i = 0; i < releaseNumbers.length; i++) {
      statement = "$statement${releaseNumbers[i]}";
      if (i != releaseNumbers.length - 1) {
        if (i % 5 == 0) {
          statement = "$statement/\n";
        } else {
          statement = "$statement/";
        }
      }
    }
    statement += ")";
    return statement;
  }